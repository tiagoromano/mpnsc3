/* eslint-disable require-jsdoc */
export class IonTabBadge {
    private tabs: JQLite;
    private links: JQLite;
    
    constructor(protected instanceElement: JQLite, protected mutation: MutationRecord, private badge: number) {
        // get all tab in parent tag
        this.tabs = instanceElement.parent().find('ion-tab');
        // get all links in parent tag
        this.links = instanceElement.parent().find('a');
    }

    private getIndex() : number {
        let retIndex;
        // Get the index of the element that has been modified to get the link related to it.
        for(let i=0; i< this.tabs.length; i++) {
            // Compare the changed element with the element in the array to obtain the index.
            if (this.tabs[i] === this.mutation.target) return i;
        }
        return retIndex;
    }

    private getLink(index: number) {
        // Get link related tab changed.
        let linkRelatedTab = this.links[index];
        return linkRelatedTab;
    }

    public changeBadge() {
        let index: number = this.getIndex();

        let valBadge: number = this.badge;

        let linkRelatedTab = this.getLink(index);

        linkRelatedTab.setAttribute('badge', valBadge.toString());

        const exist = linkRelatedTab.querySelector('.badge');
        if (exist) linkRelatedTab.querySelector('.badge').remove();

        if (valBadge > 0) {
            linkRelatedTab.classList.add('has-badge');
            let html = '<span class="badge" ng-if="badge">'+valBadge+'</span>';
            let fullHtml = linkRelatedTab.innerHTML;
            linkRelatedTab.innerHTML = html+fullHtml;
        } else {
            linkRelatedTab.classList.remove('has-badge');
        }
    }
}